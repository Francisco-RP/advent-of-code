import { assertStrictEquals } from "std/assert/mod.ts";
import { part1 } from "./part1.ts";
import { part2 } from "./part2.ts";

Deno.test("part 1 example simple", () => {
  const testInput = `
..........
..........
..........
....a.....
........a.
.....a....
..........
..........
..........
..........
`.trim();
  assertStrictEquals(part1(testInput), 4);
});

Deno.test("part 1 example input", () => {
  const testInput = `
............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............
`.trim();
  assertStrictEquals(part1(testInput), 14);
});

Deno.test("Part 1 still produces the accepted answer", async () => {
  const input = await Deno.readTextFile("./input.txt");
  assertStrictEquals(part1(input), 327);
});

Deno.test("part 2 example simple", () => {
  const testInput = `
T.........
...T......
.T........
..........
..........
..........
..........
..........
..........
..........
`.trim();
  assertStrictEquals(part2(testInput), 9);
});

Deno.test("part 2 example input", () => {
  const testInput = `
............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............
`.trim();
  assertStrictEquals(part2(testInput), 34);
});

Deno.test("Part 2 still produces the accepted answer", async () => {
  const input = await Deno.readTextFile("./input.txt");
  assertStrictEquals(part2(input), 1233);
});
